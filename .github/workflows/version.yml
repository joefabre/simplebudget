name: Automatic Versioning

on:
  push:
    branches: [ main ]

jobs:
  version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Get latest tag
      id: get_tag
      run: |
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT
        
    - name: Bump version
      id: bump_version
      run: |
        latest_tag=${{ steps.get_tag.outputs.latest_tag }}
        major=$(echo $latest_tag | cut -d. -f1 | tr -d 'v')
        minor=$(echo $latest_tag | cut -d. -f2)
        patch=$(echo $latest_tag | cut -d. -f3)
        
        # Check commit messages for version bump type
        if git log -1 --pretty=%B | grep -i "BREAKING CHANGE\|major"; then
          major=$((major + 1))
          minor=0
          patch=0
        elif git log -1 --pretty=%B | grep -i "feat\|minor"; then
          minor=$((minor + 1))
          patch=0
        else
          patch=$((patch + 1))
        fi
        
        new_tag="v$major.$minor.$patch"
        echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.bump_version.outputs.new_tag }}
        release_name: Release ${{ steps.bump_version.outputs.new_tag }}
        draft: false
        prerelease: false
        body: |
          Changes in this Release:
          ${{ github.event.head_commit.message }}
